/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TrendingCall, TrendingCallInterface } from "../TrendingCall";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "assetsManager",
        type: "address",
      },
      {
        internalType: "contract IPlaceOrder",
        name: "placeOrder",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "pairId",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "nonce",
            type: "uint32",
          },
          {
            internalType: "int112",
            name: "position0",
            type: "int112",
          },
          {
            internalType: "int112",
            name: "position1",
            type: "int112",
          },
        ],
        internalType: "struct PairBaseData[]",
        name: "pools",
        type: "tuple[]",
      },
    ],
    name: "addPairList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "assetsManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "collect",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getInputData",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "OrderNotionalAll",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint8",
                name: "orderLen",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "tokenStart",
                type: "address",
              },
              {
                internalType: "address",
                name: "tokenEnd",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "volume",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "volumeMinTo",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "startTokenWei",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "ReferencePriceX96",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "ReferenceNotional",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "MinOrderSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "GreenLightSlippageThreshold",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "CutoffSlippageThreshold",
                type: "uint256",
              },
            ],
            internalType: "struct PlaceOrderHeader",
            name: "header",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "SpotPriceX96",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "SlippageRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "ReverseSlippageRate",
                type: "uint256",
              },
              {
                internalType: "int256",
                name: "MarketAdverseShift",
                type: "int256",
              },
              {
                internalType: "uint256",
                name: "OrderNotional",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "uint8",
                    name: "dxType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "side",
                    type: "uint8",
                  },
                  {
                    internalType: "uint16",
                    name: "fee",
                    type: "uint16",
                  },
                  {
                    internalType: "int24",
                    name: "tick",
                    type: "int24",
                  },
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "tokenFrom",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "tokenTo",
                    type: "address",
                  },
                  {
                    internalType: "uint112",
                    name: "reserve0",
                    type: "uint112",
                  },
                  {
                    internalType: "uint112",
                    name: "reserve1",
                    type: "uint112",
                  },
                  {
                    internalType: "uint256",
                    name: "priceX96",
                    type: "uint256",
                  },
                ],
                internalType: "struct PlaceOrderPath[]",
                name: "path",
                type: "tuple[]",
              },
            ],
            internalType: "struct PlaceOrderData[]",
            name: "orders",
            type: "tuple[]",
          },
        ],
        internalType: "struct PlaceOrderInput",
        name: "orderInput",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPairList",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "pairId",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "nonce",
            type: "uint32",
          },
          {
            internalType: "int112",
            name: "position0",
            type: "int112",
          },
          {
            internalType: "int112",
            name: "position1",
            type: "int112",
          },
        ],
        internalType: "struct PairBaseData[]",
        name: "pools",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "placeOrderApprove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "pairId",
        type: "uint8",
      },
      {
        internalType: "uint32",
        name: "inputNonce",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "deadlineBlock",
        type: "uint256",
      },
    ],
    name: "placeOrderCallDeadlineBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "pairId",
        type: "uint8",
      },
      {
        internalType: "uint32",
        name: "inputNonce",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "deadlineBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadlineTime",
        type: "uint256",
      },
    ],
    name: "placeOrderCallDeadlineBlockAndTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "pairId",
        type: "uint8",
      },
      {
        internalType: "uint32",
        name: "inputNonce",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "deadlineBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadlineTime",
        type: "uint256",
      },
    ],
    name: "placeOrderCallDeadlineBlockAndTimeChi",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "pairId",
        type: "uint8",
      },
      {
        internalType: "uint32",
        name: "inputNonce",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "deadlineBlock",
        type: "uint256",
      },
    ],
    name: "placeOrderCallDeadlineBlockChi",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "pairId",
        type: "uint8",
      },
      {
        internalType: "uint32",
        name: "inputNonce",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "deadlineTime",
        type: "uint256",
      },
    ],
    name: "placeOrderCallDeadlineTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "pairId",
        type: "uint8",
      },
      {
        internalType: "uint32",
        name: "inputNonce",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "deadlineTime",
        type: "uint256",
      },
    ],
    name: "placeOrderCallDeadlineTimeChi",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "placeOrderCallReturn",
    outputs: [
      {
        internalType: "int256",
        name: "amount0",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1",
        type: "int256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "placeOrderFixTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPlaceOrder",
        name: "placeOrder",
        type: "address",
      },
    ],
    name: "setPlaceOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "bool",
        name: "set",
        type: "bool",
      },
    ],
    name: "setWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAssetsManager",
        type: "address",
      },
    ],
    name: "transferAssetsManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "oldNonce",
        type: "uint32",
      },
      {
        internalType: "int112",
        name: "oldPosition0",
        type: "int112",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "pairId",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "nonce",
            type: "uint32",
          },
          {
            internalType: "int112",
            name: "position0",
            type: "int112",
          },
          {
            internalType: "int112",
            name: "position1",
            type: "int112",
          },
        ],
        internalType: "struct PairBaseData",
        name: "newPair",
        type: "tuple",
      },
    ],
    name: "updatePairData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "whitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002fe338038062002fe38339810160408190526200003491620002f2565b600080546001600160a01b03191633179055816001600160a01b0381166200007e57600054600180546001600160a01b0319166001600160a01b039092169190911790556200009a565b600180546001600160a01b0319166001600160a01b0383161790555b50600080546001600160a01b03908116825260026020526040808320805460ff19908116600190811790925581548416855291909320805490911683179055600480549184166001600160a01b0319928316179055600380549091166d4946c0e9f43f4dee607b0ef1fa1c179055620001299073f1270b16afc4551a09b0db971a60e48a7be015b89062000284565b6200014a73e2ec577976af7deb30cf4880caffc1f4b219e564600162000284565b6200016b73b99daf98c7fec8330604a9a4463bbad04800b013600162000284565b60005b600a8110156200027b576040805160808101825260ff83811682526000602083018181529383018181526060840182815260068054600181018255935293517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f60029093029283018054965192519190941664ffffffffff199096169590951761010063ffffffff9092169190910217600160281b600160981b031916650100000000006001600160701b03600d96870b8116919091029190911790925591517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4090920180546001600160701b0319169290930b1617905580620002728162000331565b9150506200016e565b50505062000374565b6000546001600160a01b03163314620002c75760405162461bcd60e51b81526020600482015260016024820152604f60f81b604482015260640160405180910390fd5b6001600160a01b03919091166000908152600260205260409020805460ff1916911515919091179055565b600080604083850312156200030657600080fd5b825162000313816200035b565b602084015190925062000326816200035b565b809150509250929050565b60006000198214156200035457634e487b7160e01b600052601160045260246000fd5b5060010190565b6001600160a01b03811681146200037157600080fd5b50565b612c5f80620003846000396000f3fe60806040526004361061016a5760003560e01c80636f724920116100ca578063af4ad15b11610079578063e1f21c6711610056578063e1f21c6714610420578063f2fde38b14610440578063fc29bb6a1461046057005b8063af4ad15b146103c3578063ba183739146103f8578063d0e30db01461041857005b8063981a1317116100a7578063981a1317146103535780639b19251a14610373578063af47d8d5146103a357005b80636f724920146102e457806374877b281461031e5780638da5cb5b1461033e57005b80634e26e7991161012657806364eefa6e1161010357806364eefa6e146102775780636ad4e873146102a45780636b8357ac146102c457005b80634e26e7991461021757806353d6fd59146102375780635456b36f1461025757005b80632486e744116101545780632486e744146101ac5780632653356a146101cc5780633180a9f4146101ec57005b8062cee0461461016c5780630fb984071461018c575b005b34801561017857600080fd5b5061016a610187366004611fed565b610480565b34801561019857600080fd5b5061016a6101a73660046121d7565b610516565b3480156101b857600080fd5b5061016a6101c73660046123d3565b6105c0565b3480156101d857600080fd5b5061016a6101e7366004612167565b61074c565b3480156101f857600080fd5b506102016107ea565b60405161020e919061261c565b60405180910390f35b34801561022357600080fd5b5061016a610232366004611fed565b610908565b34801561024357600080fd5b5061016a61025236600461202e565b610a37565b34801561026357600080fd5b5061016a610272366004612167565b610b0e565b34801561028357600080fd5b50610297610292366004612125565b610b1b565b60405161020e91906126d0565b3480156102b057600080fd5b5061016a6102bf366004612167565b610bf3565b3480156102d057600080fd5b5061016a6102df366004612067565b610db0565b3480156102f057600080fd5b506102f9610e53565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161020e565b34801561032a57600080fd5b5061016a610339366004611fd0565b610eea565b34801561034a57600080fd5b506102f9610fcb565b34801561035f57600080fd5b5061016a61036e366004612093565b611062565b34801561037f57600080fd5b5061039361038e366004611fd0565b611143565b604051901515815260200161020e565b3480156103af57600080fd5b5061016a6103be3660046121d7565b6111e7565b3480156103cf57600080fd5b506103e36103de366004612125565b6113b0565b6040805192835260208301919091520161020e565b34801561040457600080fd5b5061016a610413366004612167565b61153a565b61016a61154c565b34801561042c57600080fd5b5061016a61043b366004611fed565b61161e565b34801561044c57600080fd5b5061016a61045b366004611fd0565b61169f565b34801561046c57600080fd5b5061016a61047b366004611fd0565b611781565b60055473ffffffffffffffffffffffffffffffffffffffff163314610506576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600160248201527f500000000000000000000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b61051183838361183f565b505050565b804211801561052457508143115b1561052e5761053a565b61053a8484888861190e565b3360009081526002602052604090205460ff1615156001146105b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600160248201527f570000000000000000000000000000000000000000000000000000000000000060448201526064016104fd565b505050505050565b600060066105d16020840184612444565b60ff16815481106105e4576105e4612a40565b60009182526020909120600290910201805490915063ffffffff8581166101009092041614801561062757508054600d84810b65010000000000909204810b900b145b61068d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600160248201527f550000000000000000000000000000000000000000000000000000000000000060448201526064016104fd565b81600661069d6020830183612444565b60ff16815481106106b0576106b0612a40565b906000526020600020906002020181816106ca9190612a9e565b50503360009081526002602052604090205460ff1615156001149050610511576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600160248201527f570000000000000000000000000000000000000000000000000000000000000060448201526064016104fd565b8042111561075957610765565b6107658383878761190e565b3360009081526002602052604090205460ff1615156001146107e3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600160248201527f570000000000000000000000000000000000000000000000000000000000000060448201526064016104fd565b5050505050565b60606006805480602002602001604051908101604052809291908181526020016000905b828210156108815760008481526020908190206040805160808101825260028602909201805460ff8116845263ffffffff61010082041684860152650100000000009004600d90810b810b810b92840192909252600190810154820b820b90910b6060830152908352909201910161080e565b5050505090503360009081526002602052604090205460ff161515600114610905576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600160248201527f570000000000000000000000000000000000000000000000000000000000000060448201526064016104fd565b90565b60055473ffffffffffffffffffffffffffffffffffffffff163314610989576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600160248201527f500000000000000000000000000000000000000000000000000000000000000060448201526064016104fd565b6040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811660048301526024820183905284169063095ea7b390604401602060405180830381600087803b1580156109f957600080fd5b505af1158015610a0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a319190612108565b50505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610ab8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600160248201527f4f0000000000000000000000000000000000000000000000000000000000000060448201526064016104fd565b73ffffffffffffffffffffffffffffffffffffffff91909116600090815260026020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b8043111561075957610765565b610b23611c4e565b600480546040517f64eefa6e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116916364eefa6e91610b7a918791879101612683565b60006040518083038186803b158015610b9257600080fd5b505afa158015610ba6573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610bec9190810190612275565b9392505050565b60005a905081431115610c0557610c11565b610c118484888861190e565b3360009081526002602052604090205460ff161515600114610c8f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600160248201527f570000000000000000000000000000000000000000000000000000000000000060448201526064016104fd565b6000610c9c366010612984565b5a610ca984615208612931565b610cb391906129c1565b610cbd9190612931565b60035490915073ffffffffffffffffffffffffffffffffffffffff1663079d229f3361a3db610cee8561374a612931565b610cf89190612949565b610d03906001612931565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff90921660048301526024820152604401602060405180830381600087803b158015610d6e57600080fd5b505af1158015610d82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da691906123ba565b5050505050505050565b3360009081526002602052604090205460ff1615610e4f5773ffffffffffffffffffffffffffffffffffffffff8216610e2a5760015460405173ffffffffffffffffffffffffffffffffffffffff9091169082156108fc029083906000818181858888f19350505050158015610511573d6000803e3d6000fd5b600154610e4f90839073ffffffffffffffffffffffffffffffffffffffff168361183f565b5050565b60015473ffffffffffffffffffffffffffffffffffffffff163360009081526002602052604090205460ff161515600114610905576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600160248201527f570000000000000000000000000000000000000000000000000000000000000060448201526064016104fd565b60015473ffffffffffffffffffffffffffffffffffffffff163314610f6b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600160248201527f410000000000000000000000000000000000000000000000000000000000000060448201526064016104fd565b73ffffffffffffffffffffffffffffffffffffffff811615610fc857600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83161790555b50565b60005473ffffffffffffffffffffffffffffffffffffffff163360009081526002602052604090205460ff161515600114610905576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600160248201527f570000000000000000000000000000000000000000000000000000000000000060448201526064016104fd565b60005b818110156110c457600683838381811061108157611081612a40565b8354600181018555600094855260209094206080909102929092019260020290910190506110af8282612a9e565b505080806110bc906129d8565b915050611065565b503360009081526002602052604090205460ff161515600114610e4f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600160248201527f570000000000000000000000000000000000000000000000000000000000000060448201526064016104fd565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600260205260408082205433835291205460ff918216911615156001146111e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600160248201527f570000000000000000000000000000000000000000000000000000000000000060448201526064016104fd565b919050565b60005a905081421180156111fa57508243115b1561120457611210565b6112108585898961190e565b3360009081526002602052604090205460ff16151560011461128e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600160248201527f570000000000000000000000000000000000000000000000000000000000000060448201526064016104fd565b600061129b366010612984565b5a6112a884615208612931565b6112b291906129c1565b6112bc9190612931565b60035490915073ffffffffffffffffffffffffffffffffffffffff1663079d229f3361a3db6112ed8561374a612931565b6112f79190612949565b611302906001612931565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff90921660048301526024820152604401602060405180830381600087803b15801561136d57600080fd5b505af1158015611381573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a591906123ba565b505050505050505050565b60048054600580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90921691821790556040517faf4ad15b00000000000000000000000000000000000000000000000000000000815260009283929163af4ad15b91611437918891889101612683565b6040805180830381600087803b15801561145057600080fd5b505af1158015611464573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114889190612251565b600580547fffffffffffffffffffffffff000000000000000000000000000000000000000016905533600090815260026020526040902054919350915060ff161515600114611533576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600160248201527f570000000000000000000000000000000000000000000000000000000000000060448201526064016104fd565b9250929050565b60005a905081421115610c0557610c11565b34156115c25773c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156115ae57600080fd5b505af11580156107e3573d6000803e3d6000fd5b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff1663d0e30db0476040518263ffffffff1660e01b81526004016000604051808303818588803b1580156115ae57600080fd5b60005473ffffffffffffffffffffffffffffffffffffffff163314610989576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600160248201527f4f0000000000000000000000000000000000000000000000000000000000000060448201526064016104fd565b60005473ffffffffffffffffffffffffffffffffffffffff163314611720576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600160248201527f4f0000000000000000000000000000000000000000000000000000000000000060448201526064016104fd565b73ffffffffffffffffffffffffffffffffffffffff811615610fc8576000805473ffffffffffffffffffffffffffffffffffffffff83167fffffffffffffffffffffffff000000000000000000000000000000000000000090911617905550565b600480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83161790553360009081526002602052604090205460ff161515600114610fc8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600160248201527f570000000000000000000000000000000000000000000000000000000000000060448201526064016104fd565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790529151918516916118d191906125e1565b6000604051808303816000865af19150503d80600081146105b8576040519150601f19603f3d011682016040523d82523d6000602084013e6105b8565b63ffffffff831615611b4a57600060068560ff168154811061193257611932612a40565b60009182526020909120600290910201805490915063ffffffff80861661010090920416106119615750610a31565b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000ff1661010063ffffffff861602178155600480546005805473ffffffffffffffffffffffffffffffffffffffff9092167fffffffffffffffffffffffff0000000000000000000000000000000000000000909216821790556040517fd21e33cc00000000000000000000000000000000000000000000000000000000815260009283929163d21e33cc91611a1b918991899101612683565b6040805180830381600087803b158015611a3457600080fd5b505af1158015611a48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a6c9190612251565b600580547fffffffffffffffffffffffff000000000000000000000000000000000000000016815585549294509092508391859190611ab8908490650100000000009004600d0b6128c3565b92506101000a8154816dffffffffffffffffffffffffffff0219169083600d0b6dffffffffffffffffffffffffffff160217905550808360010160008282829054906101000a9004600d0b611b0d91906128c3565b92506101000a8154816dffffffffffffffffffffffffffff0219169083600d0b6dffffffffffffffffffffffffffff160217905550505050610a31565b60048054600580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90921691821790556040517fd21e33cc000000000000000000000000000000000000000000000000000000008152909163d21e33cc91611bcd918691869101612683565b6040805180830381600087803b158015611be657600080fd5b505af1158015611bfa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c1e9190612251565b5050600580547fffffffffffffffffffffffff000000000000000000000000000000000000000016905550505050565b604051806060016040528060008152602001611cec604051806101600160405280600060ff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001606081525090565b80516111e281612bc9565b600082601f830112611d1557600080fd5b8151611d28611d238261289f565b612850565b80828252602082019150602085018660208560051b8801011115611d4b57600080fd5b60005b84811015611f3557815167ffffffffffffffff80821115611d6e57600080fd5b9088019060c0828b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0011215611da457600080fd5b611dac6127bc565b6020830151815260408301516020820152606083015160408201526080830151606082015260a0830151608082015260c083015182811115611ded57600080fd5b8084019350508a603f840112611e0257600080fd5b60208301519150611e15611d238361289f565b80838252602082019150604085018d604061014087028801011115611e3957600080fd5b600095505b84861015611f1757610140818f031215611e5757600080fd5b611e5f6127e5565b611e6882611fc5565b8152611e7660208301611fc5565b6020820152611e8760408301611fb3565b6040820152611e9860608301611f83565b6060820152611ea960808301611cf9565b6080820152611eba60a08301611cf9565b60a0820152611ecb60c08301611cf9565b60c0820152611edc60e08301611f95565b60e0820152611eee6101008301611f95565b610100820152610120828101519082015283526001959095019460209092019161014001611e3e565b5060a083015250865250506020938401939190910190600101611d4e565b50909695505050505050565b60008083601f840112611f5357600080fd5b50813567ffffffffffffffff811115611f6b57600080fd5b60208301915083602082850101111561153357600080fd5b8051600281900b81146111e257600080fd5b80516dffffffffffffffffffffffffffff811681146111e257600080fd5b805161ffff811681146111e257600080fd5b80516111e281612c1a565b600060208284031215611fe257600080fd5b8135610bec81612bc9565b60008060006060848603121561200257600080fd5b833561200d81612bc9565b9250602084013561201d81612bc9565b929592945050506040919091013590565b6000806040838503121561204157600080fd5b823561204c81612bc9565b9150602083013561205c81612beb565b809150509250929050565b6000806040838503121561207a57600080fd5b823561208581612bc9565b946020939093013593505050565b600080602083850312156120a657600080fd5b823567ffffffffffffffff808211156120be57600080fd5b818501915085601f8301126120d257600080fd5b8135818111156120e157600080fd5b8660208260071b85010111156120f657600080fd5b60209290920196919550909350505050565b60006020828403121561211a57600080fd5b8151610bec81612beb565b6000806020838503121561213857600080fd5b823567ffffffffffffffff81111561214f57600080fd5b61215b85828601611f41565b90969095509350505050565b60008060008060006080868803121561217f57600080fd5b853567ffffffffffffffff81111561219657600080fd5b6121a288828901611f41565b90965094505060208601356121b681612c1a565b925060408601356121c681612c08565b949793965091946060013592915050565b60008060008060008060a087890312156121f057600080fd5b863567ffffffffffffffff81111561220757600080fd5b61221389828a01611f41565b909750955050602087013561222781612c1a565b9350604087013561223781612c08565b959894975092956060810135946080909101359350915050565b6000806040838503121561226457600080fd5b505080516020909101519092909150565b60006020828403121561228757600080fd5b815167ffffffffffffffff8082111561229f57600080fd5b908301908185036101a08112156122b557600080fd5b6122bd612809565b83518152610160807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0840112156122f357600080fd5b6122fb61282c565b925061230960208601611fc5565b835261231760408601611cf9565b602084015261232860608601611cf9565b60408401526080850151606084015260a0850151608084015260c085015160a084015260e085015160c08401526101008086015160e0850152610120808701518286015261014091508187015181860152508186015181850152505081602082015261018084015191508282111561239f57600080fd5b6123ab87838601611d04565b60408201529695505050505050565b6000602082840312156123cc57600080fd5b5051919050565b600080600083850360c08112156123e957600080fd5b84356123f481612c08565b9350602085013561240481612bf9565b925060807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08201121561243657600080fd5b506040840190509250925092565b60006020828403121561245657600080fd5b8135610bec81612c1a565b600081518084526020808501808196508360051b8101915082860160005b858110156125d4578284038952815160c080860182518752878301518888015260408084015181890152606080850151818a0152608080860151818b015260a086015195508460a08b015283865180865260e08c0191508c88019750600095505b808610156125b7578751805160ff1683528d8101516125038f85018260ff169052565b508581015161ffff16838701528481015160020b858401528381015173ffffffffffffffffffffffffffffffffffffffff9081168585015260a08083015182169085015288820151168884015260e0808201516dffffffffffffffffffffffffffff811691850191909152506101008101516125926101008501826dffffffffffffffffffffffffffff169052565b5061012081015161012084015250610140820191508c880197506001860195506124e0565b509e8b019e9950505094880194505050600191909101905061247f565b5091979650505050505050565b6000825160005b8181101561260257602081860181015185830152016125e8565b81811115612611576000828501525b509190910192915050565b602080825282518282018190526000919060409081850190868401855b828110156125d4578151805160ff1685528681015163ffffffff168786015285810151600d90810b87870152606091820151900b9085015260809093019290850190600101612639565b60208152816020820152818360408301376000818301604090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160101919050565b6020815281516020820152600060208301516126f260408401825160ff169052565b602081015173ffffffffffffffffffffffffffffffffffffffff8116606085015250604081015173ffffffffffffffffffffffffffffffffffffffff8116608085015250606081015160a0840152608081015160c084015260a081015160e084015260c0810151610100818186015260e0830151915061012082818701528184015192506101409150828287015280840151610160870152508083015161018086015250505060408301516101a08081850152506127b46101c0840182612461565b949350505050565b60405160c0810167ffffffffffffffff811182821017156127df576127df612a6f565b60405290565b604051610140810167ffffffffffffffff811182821017156127df576127df612a6f565b6040516060810167ffffffffffffffff811182821017156127df576127df612a6f565b604051610160810167ffffffffffffffff811182821017156127df576127df612a6f565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561289757612897612a6f565b604052919050565b600067ffffffffffffffff8211156128b9576128b9612a6f565b5060051b60200190565b600081600d0b83600d0b60008212826d7fffffffffffffffffffffffffff038213811516156128f4576128f4612a11565b827fffffffffffffffffffffffffffffffffffff800000000000000000000000000003821281161561292857612928612a11565b50019392505050565b6000821982111561294457612944612a11565b500190565b60008261297f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156129bc576129bc612a11565b500290565b6000828210156129d3576129d3612a11565b500390565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612a0a57612a0a612a11565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b8135612aa981612c1a565b60ff811690508154817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082161783556020840135612ae681612c08565b64ffffffff008160081b16905080837fffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000008416171784556040850135612b2a81612bf9565b72ffffffffffffffffffffffffffff000000000081600d0b60281b16847fffffffffffffffffffffffffff00000000000000000000000000000000000000851617831717855550505050600181016060830135612b8681612bf9565b7fffffffffffffffffffffffffffffffffffff00000000000000000000000000008254166dffffffffffffffffffffffffffff82600d0b16811783555050505050565b73ffffffffffffffffffffffffffffffffffffffff81168114610fc857600080fd5b8015158114610fc857600080fd5b80600d0b8114610fc857600080fd5b63ffffffff81168114610fc857600080fd5b60ff81168114610fc857600080fdfea264697066735822122082ecebc373976c5bc419181cd033fc6c1d28decc27fadd931445c35c3ca9495364736f6c63430008060033";

type TrendingCallConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TrendingCallConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TrendingCall__factory extends ContractFactory {
  constructor(...args: TrendingCallConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    assetsManager: string,
    placeOrder: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TrendingCall> {
    return super.deploy(
      assetsManager,
      placeOrder,
      overrides || {}
    ) as Promise<TrendingCall>;
  }
  getDeployTransaction(
    assetsManager: string,
    placeOrder: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      assetsManager,
      placeOrder,
      overrides || {}
    );
  }
  attach(address: string): TrendingCall {
    return super.attach(address) as TrendingCall;
  }
  connect(signer: Signer): TrendingCall__factory {
    return super.connect(signer) as TrendingCall__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TrendingCallInterface {
    return new utils.Interface(_abi) as TrendingCallInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TrendingCall {
    return new Contract(address, _abi, signerOrProvider) as TrendingCall;
  }
}
