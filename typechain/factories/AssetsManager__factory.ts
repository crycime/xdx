/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AssetsManager, AssetsManagerInterface } from "../AssetsManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "assetsManager_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "assetsManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "collect",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "bool",
        name: "set",
        type: "bool",
      },
    ],
    name: "setWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAssetsManager",
        type: "address",
      },
    ],
    name: "transferAssetsManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "whitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610c5c380380610c5c83398101604081905261002f916100d5565b600080546001600160a01b031916331790556001600160a01b03811661007657600054600180546001600160a01b0319166001600160a01b03909216919091179055610092565b600180546001600160a01b0319166001600160a01b0383161790555b50600080546001600160a01b039081168252600260205260408083208054600160ff19918216811790925581549093168452922080549091169091179055610105565b6000602082840312156100e757600080fd5b81516001600160a01b03811681146100fe57600080fd5b9392505050565b610b48806101146000396000f3fe6080604052600436106100965760003560e01c80638da5cb5b11610069578063d0e30db01161004e578063d0e30db014610181578063e1f21c6714610189578063f2fde38b146101a957600080fd5b80638da5cb5b1461013c5780639b19251a1461015157600080fd5b806353d6fd591461009b5780636b8357ac146100bd5780636f724920146100dd57806374877b281461011c575b600080fd5b3480156100a757600080fd5b506100bb6100b6366004610a4b565b6101c9565b005b3480156100c957600080fd5b506100bb6100d8366004610a82565b6102a5565b3480156100e957600080fd5b506100f261034d565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b34801561012857600080fd5b506100bb6101373660046109ed565b6103e7565b34801561014857600080fd5b506100f26104c8565b34801561015d57600080fd5b5061017161016c3660046109ed565b61055f565b6040519015158152602001610113565b6100bb610603565b34801561019557600080fd5b506100bb6101a4366004610a0f565b6106dc565b3480156101b557600080fd5b506100bb6101c43660046109ed565b61080b565b60005473ffffffffffffffffffffffffffffffffffffffff16331461024f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600160248201527f4f0000000000000000000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff91909116600090815260026020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b3360009081526002602052604090205460ff16156103495773ffffffffffffffffffffffffffffffffffffffff82166103245760015460405173ffffffffffffffffffffffffffffffffffffffff9091169082156108fc029083906000818181858888f1935050505015801561031f573d6000803e3d6000fd5b505050565b60015461034990839073ffffffffffffffffffffffffffffffffffffffff16836108ed565b5050565b60015473ffffffffffffffffffffffffffffffffffffffff163360009081526002602052604090205460ff1615156001146103e4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600160248201527f57000000000000000000000000000000000000000000000000000000000000006044820152606401610246565b90565b60015473ffffffffffffffffffffffffffffffffffffffff163314610468576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600160248201527f41000000000000000000000000000000000000000000000000000000000000006044820152606401610246565b73ffffffffffffffffffffffffffffffffffffffff8116156104c557600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83161790555b50565b60005473ffffffffffffffffffffffffffffffffffffffff163360009081526002602052604090205460ff1615156001146103e4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600160248201527f57000000000000000000000000000000000000000000000000000000000000006044820152606401610246565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600260205260408082205433835291205460ff918216911615156001146105fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600160248201527f57000000000000000000000000000000000000000000000000000000000000006044820152606401610246565b919050565b34156106805773c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561066557600080fd5b505af1158015610679573d6000803e3d6000fd5b5050505050565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff1663d0e30db0476040518263ffffffff1660e01b81526004016000604051808303818588803b15801561066557600080fd5b60005473ffffffffffffffffffffffffffffffffffffffff16331461075d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600160248201527f4f000000000000000000000000000000000000000000000000000000000000006044820152606401610246565b6040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811660048301526024820183905284169063095ea7b390604401602060405180830381600087803b1580156107cd57600080fd5b505af11580156107e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108059190610aac565b50505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461088c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600160248201527f4f000000000000000000000000000000000000000000000000000000000000006044820152606401610246565b73ffffffffffffffffffffffffffffffffffffffff8116156104c5576000805473ffffffffffffffffffffffffffffffffffffffff83167fffffffffffffffffffffffff000000000000000000000000000000000000000090911617905550565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905291519185169161097f9190610ac9565b6000604051808303816000865af19150503d80600081146109bc576040519150601f19603f3d011682016040523d82523d6000602084013e6109c1565b606091505b505050505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146105fe57600080fd5b6000602082840312156109ff57600080fd5b610a08826109c9565b9392505050565b600080600060608486031215610a2457600080fd5b610a2d846109c9565b9250610a3b602085016109c9565b9150604084013590509250925092565b60008060408385031215610a5e57600080fd5b610a67836109c9565b91506020830135610a7781610b04565b809150509250929050565b60008060408385031215610a9557600080fd5b610a9e836109c9565b946020939093013593505050565b600060208284031215610abe57600080fd5b8151610a0881610b04565b6000825160005b81811015610aea5760208186018101518583015201610ad0565b81811115610af9576000828501525b509190910192915050565b80151581146104c557600080fdfea26469706673582212204a6786cfb59caf181df88999b3d36bc89a90d01bad51f65aa184e6ad4dc1fcf864736f6c63430008060033";

type AssetsManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AssetsManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AssetsManager__factory extends ContractFactory {
  constructor(...args: AssetsManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    assetsManager_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AssetsManager> {
    return super.deploy(
      assetsManager_,
      overrides || {}
    ) as Promise<AssetsManager>;
  }
  getDeployTransaction(
    assetsManager_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(assetsManager_, overrides || {});
  }
  attach(address: string): AssetsManager {
    return super.attach(address) as AssetsManager;
  }
  connect(signer: Signer): AssetsManager__factory {
    return super.connect(signer) as AssetsManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AssetsManagerInterface {
    return new utils.Interface(_abi) as AssetsManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AssetsManager {
    return new Contract(address, _abi, signerOrProvider) as AssetsManager;
  }
}
